{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Admin API",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://138.68.71.39:4000"
    }
  ],
  "paths": {
    "/account": {
      "post": {
        "summary": "Create an account",
        "operationId": "createAccount",
        "tags": [
          "Account"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "account with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/account/:accountId": {
      "get": {
        "summary": "Get account with id",
        "operationId": "getAccount",
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The id of the account to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "account with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "Update an account",
        "operationId": "updateAccount",
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The id of the account to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "account with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete account with id",
        "operationId": "deleteAccount",
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The id of the account to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "account with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "summary": "List all accounts",
        "operationId": "listAccounts",
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "array of accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/restaurant": {
      "post": {
        "summary": "Create a restaurant",
        "operationId": "createRestaurant",
        "tags": [
          "Restaurant"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestaurantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "account with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/restaurant/:restaurantId": {
      "get": {
        "summary": "Get restaurant with id",
        "operationId": "getRestaurant",
        "tags": [
          "Restaurant"
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "description": "The id of the restaurant to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "restaurant with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a restaurant",
        "operationId": "updateRestaurant",
        "tags": [
          "Restaurant"
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "description": "The id of the restaurant to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestaurantUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "restaurant with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete restaurant with id",
        "operationId": "deleteRestaurant",
        "tags": [
          "Restaurant"
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "description": "The id of the restaurant to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "restaurant with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/restaurants": {
      "get": {
        "summary": "List all restaurants",
        "operationId": "listRestaurants",
        "tags": [
          "Restaurant"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "description": "The id of the account",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "array of restaurants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RestaurantResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/menu": {
      "post": {
        "summary": "Create a menu",
        "operationId": "createMenu",
        "tags": [
          "Menu"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "menu with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/menu/validate": {
      "post": {
        "summary": "Validate a menu",
        "operationId": "validateMenu",
        "tags": [
          "Menu"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuValidateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "menu valid",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "menu not valid",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "defaultParent not found for name 'bier'"
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/menu/:menuId": {
      "get": {
        "summary": "Get menu with id",
        "operationId": "getMenu",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "description": "The id of the menu to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "menu with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a menu",
        "operationId": "updateMenu",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "description": "The id of the menu to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestaurantUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "menu with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete menu with id",
        "operationId": "deleteMenu",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "description": "The id of the menu to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "menu with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/menus": {
      "get": {
        "summary": "List all menus",
        "operationId": "listMenus",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "description": "The id of the restaurant",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "array of menus",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MenuResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/voiceDevice": {
      "post": {
        "summary": "Create a voiceDevice",
        "operationId": "createVoiceDevice",
        "tags": [
          "VoiceDevice"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceDeviceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "voiceDevice with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceDeviceResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/voiceDevice/:voiceDeviceId": {
      "get": {
        "summary": "Get voiceDevice with id",
        "operationId": "getVoiceDevice",
        "tags": [
          "VoiceDevice"
        ],
        "parameters": [
          {
            "name": "voiceDeviceId",
            "in": "path",
            "required": true,
            "description": "The id of the voiceDevice to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "voiceDevice with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceDeviceResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a voiceDevice",
        "operationId": "updateVoiceDevice",
        "tags": [
          "VoiceDevice"
        ],
        "parameters": [
          {
            "name": "voiceDeviceId",
            "in": "path",
            "required": true,
            "description": "The id of the voiceDevice to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceDeviceUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "voiceDevice with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceDeviceResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete voiceDevice with id",
        "operationId": "deleteVoiceDevice",
        "tags": [
          "VoiceDevice"
        ],
        "parameters": [
          {
            "name": "voiceDeviceId",
            "in": "path",
            "required": true,
            "description": "The id of the voiceDevice to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "voiceDevice with id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceDeviceResponse"
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/voiceDevices": {
      "get": {
        "summary": "List all voiceDevices",
        "operationId": "listVoiceDevices",
        "tags": [
          "VoiceDevice"
        ],
        "parameters": [
          {
            "name": "restaurantId",
            "in": "path",
            "required": true,
            "description": "The id of the restaurant",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "array of menus",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VoiceDeviceResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "wrong request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/upload": {
      "post": {
        "summary": "Upload realm file",
        "operationId": "uploadRealm",
        "tags": [
          "Realm"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "upload success"
          },
          "400": {
            "description": "wrong request, file not found"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/download": {
      "get": {
        "summary": "Download realm file",
        "operationId": "downloadRealm",
        "tags": [
          "Realm"
        ],
        "responses": {
          "200": {
            "description": "voiceDevice with id",
            "content": {
              "application/download": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "example": "default.realm"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountResponse": {
        "properties": {
          "id": {
            "type": "string",
            "example": "83e0fd08-5c7b-4ff0-b730-3ebc2208ecae"
          },
          "mail": {
            "type": "string",
            "example": "restaurant-order@code.berlin"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "firstName": {
            "type": "string",
            "example": "Max"
          },
          "surName": {
            "type": "string",
            "example": "Mustermann"
          },
          "phone": {
            "type": "string",
            "example": "030 124124189"
          },
          "address": {
            "$ref": "#/components/schemas/AddressResponse"
          }
        }
      },
      "AddressResponse": {
        "properties": {
          "id": {
            "type": "string",
            "example": "7258b29c-e305-4673-b4ad-e1d7bf7f65a8"
          },
          "street": {
            "type": "string",
            "example": "Storkower Straße 205a"
          },
          "postCode": {
            "type": "string",
            "example": "10369"
          },
          "city": {
            "type": "string",
            "example": "Berlin"
          },
          "country": {
            "type": "string",
            "example": "Germany"
          }
        }
      },
      "AccountRequest": {
        "required": [
          "mail",
          "password",
          "firstName",
          "surName",
          "phone",
          "street",
          "postCode",
          "city",
          "country"
        ],
        "properties": {
          "mail": {
            "type": "string",
            "example": "restaurant-order@code.berlin"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "firstName": {
            "type": "string",
            "example": "Max"
          },
          "surName": {
            "type": "string",
            "example": "Mustermann"
          },
          "phone": {
            "type": "string",
            "example": "030 124124189"
          },
          "street": {
            "type": "string",
            "example": "Storkower Straße 205a"
          },
          "postCode": {
            "type": "string",
            "example": "10369"
          },
          "city": {
            "type": "string",
            "example": "Berlin"
          },
          "country": {
            "type": "string",
            "example": "Germany"
          }
        }
      },
      "AccountUpdateRequest": {
        "properties": {
          "mail": {
            "type": "string",
            "example": "restaurant-order@code.berlin"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "firstName": {
            "type": "string",
            "example": "Max"
          },
          "surName": {
            "type": "string",
            "example": "Mustermann"
          },
          "phone": {
            "type": "string",
            "example": "030 124124189"
          },
          "street": {
            "type": "string",
            "example": "Storkower Straße 205a"
          },
          "postCode": {
            "type": "string",
            "example": "10369"
          },
          "city": {
            "type": "string",
            "example": "Berlin"
          },
          "country": {
            "type": "string",
            "example": "Germany"
          }
        }
      },
      "RestaurantRequest": {
        "required": [
          "name",
          "accountId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Zur goldenen Möwe"
          },
          "accountId": {
            "type": "string",
            "example": "7258b29c-e305-4673-b4ad-e1d7bf7f65a8"
          },
          "street": {
            "type": "string",
            "example": "Storkower Straße 205a"
          },
          "postCode": {
            "type": "string",
            "example": "10369"
          },
          "city": {
            "type": "string",
            "example": "Berlin"
          },
          "country": {
            "type": "string",
            "example": "Germany"
          }
        }
      },
      "RestaurantResponse": {
        "properties": {
          "id": {
            "type": "string",
            "example": "195d4792-e771-4d0b-8b45-df96a2965f2f"
          },
          "name": {
            "type": "string",
            "example": "Zur goldenen Möwe"
          },
          "accountId": {
            "type": "string",
            "example": "7258b29c-e305-4673-b4ad-e1d7bf7f65a8"
          },
          "address": {
            "$ref": "#/components/schemas/AddressResponse"
          }
        }
      },
      "RestaurantUpdateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "example": "Zur goldenen Möwe"
          },
          "street": {
            "type": "string",
            "example": "Storkower Straße 205a"
          },
          "postCode": {
            "type": "string",
            "example": "10369"
          },
          "city": {
            "type": "string",
            "example": "Berlin"
          },
          "country": {
            "type": "string",
            "example": "Germany"
          }
        }
      },
      "MenuRequest": {
        "required": [
          "restaurantId",
          "name"
        ],
        "properties": {
          "restaurantId": {
            "type": "string",
            "example": "195d4792-e771-4d0b-8b45-df96a2965f2f"
          },
          "name": {
            "type": "string",
            "example": "Saisonkarte"
          },
          "drinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DrinkObject"
            }
          },
          "defaultParents": {
            "type": "array",
            "$ref": "#/components/schemas/DefaultParentDrinkObject"
          }
        }
      },
      "MenuUpdateRequest": {
        "properties": {
          "restaurantId": {
            "type": "string",
            "example": "195d4792-e771-4d0b-8b45-df96a2965f2f"
          },
          "name": {
            "type": "string",
            "example": "Saisonkarte"
          },
          "drinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DrinkObject"
            }
          },
          "defaultParents": {
            "type": "array",
            "$ref": "#/components/schemas/DefaultParentDrinkObject"
          }
        }
      },
      "MenuResponse": {
        "properties": {
          "id": {
            "type": "string",
            "example": "585d4592-e7e1-dd09-ab55-df56a2e65cfe"
          },
          "restaurantId": {
            "type": "string",
            "example": "195d4792-e771-4d0b-8b45-df96a2965f2f"
          },
          "name": {
            "type": "string",
            "example": "Saisonkarte"
          },
          "drinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DrinkObject"
            }
          },
          "defaultParents": {
            "type": "array",
            "$ref": "#/components/schemas/DefaultParentDrinkObject"
          }
        }
      },
      "DrinkObject": {
        "properties": {
          "name": {
            "type": "string",
            "example": "bier"
          },
          "synonym": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "vom fass"
            ]
          },
          "default": {
            "type": "string",
            "example": "jever"
          },
          "child": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildDrinkObject"
            }
          }
        }
      },
      "ChildDrinkObject": {
        "properties": {
          "name": {
            "type": "string",
            "example": "börsenbier"
          },
          "productName": {
            "type": "string",
            "example": "Börsenbier"
          },
          "synonym": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "börse"
            ]
          },
          "var": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChildDrinkVarObject"
            }
          }
        }
      },
      "ChildDrinkVarObject": {
        "properties": {
          "size": {
            "type": "number",
            "example": 500
          },
          "price": {
            "type": "number",
            "example": 3.9
          }
        }
      },
      "DefaultParentDrinkObject": {
        "properties": {
          "name": {
            "type": "string",
            "example": "pilsener"
          },
          "parent": {
            "type": "string",
            "example": "jever"
          }
        }
      },
      "MenuValidateRequest": {
        "required": [
          "restaurantId",
          "name",
          "drinks",
          "defaultParents"
        ],
        "properties": {
          "restaurantId": {
            "type": "string",
            "example": "195d4792-e771-4d0b-8b45-df96a2965f2f"
          },
          "name": {
            "type": "string",
            "example": "Saisonkarte"
          },
          "drinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DrinkObject"
            }
          },
          "defaultParents": {
            "type": "array",
            "$ref": "#/components/schemas/DefaultParentDrinkObject"
          }
        }
      },
      "VoiceDeviceRequest": {
        "required": [
          "restaurantId",
          "number"
        ],
        "properties": {
          "restaurantId": {
            "type": "string",
            "example": "195d4792-e771-4d0b-8b45-df96a2965f2f"
          },
          "number": {
            "type": "number",
            "example": 2
          }
        }
      },
      "VoiceDeviceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "example": "a05d47e2-eff1-3a0b-8bdd-df96a2965e34"
          },
          "restaurantId": {
            "type": "string",
            "example": "195d4792-e771-4d0b-8b45-df96a2965f2f"
          },
          "number": {
            "type": "number",
            "example": 2
          }
        }
      },
      "VoiceDeviceUpdateRequest": {
        "properties": {
          "restaurantId": {
            "type": "string",
            "example": "195d4792-e771-4d0b-8b45-df96a2965f2f"
          },
          "number": {
            "type": "number",
            "example": 2
          }
        }
      }
    }
  }
}